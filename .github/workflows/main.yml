name: Sanitize & Release notebooks

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write  # needed for committing fixes and creating/updating releases

concurrency:
  group: sanitize-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sanitize_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run sanitizer (keep outputs)
        id: sanitize
        run: |
          set +e
          python sanitize_ipynb.py
          ec=$?
          if [ $ec -eq 2 ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            exit 0  # continue to commit/push
          fi
          exit $ec

      - name: Commit & push sanitized notebooks
        if: steps.sanitize.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: sanitize notebooks for GitHub preview"
          git push

      # Optional: remove legacy bad-named asset (trailing space) if it still exists
      - name: Remove legacy asset with trailing space (if present)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          gh release view latest-notebooks --json assets --jq '.assets[].name' |             grep -Fx "SM2_supply_air_heating_ambient_context_public_dataset .ipynb" &&             gh release delete-asset latest-notebooks "SM2_supply_air_heating_ambient_context_public_dataset .ipynb" -y || true

      # Prepare upload directory (optional filename sanitization)
      - name: Prepare upload directory
        run: |
          set -e
          rm -rf upload && mkdir -p upload
          # Copy all .ipynb and sanitize filenames for upload (collapse whitespace, trim)
          while IFS= read -r -d '' f; do
            base="$(basename "$f")"
            clean="$(printf "%s" "$base" | sed 's/[[:space:]]\+/_/g' | sed 's/_*\.ipynb$/.ipynb/')"
            cp "$f" "upload/$clean"
          done < <(find . -type f -name '*.ipynb' -print0)
          echo "Files to upload:"
          ls -1 upload

      - name: Create/Update release 'latest-notebooks' (upload sanitized notebooks)
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest-notebooks
          release_name: latest-notebooks
          file: upload/*.ipynb
          file_glob: true
          overwrite: true
